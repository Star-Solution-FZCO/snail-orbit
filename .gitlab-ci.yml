stages:
  - build-test-images
  - test
  - lint
  - build

default:
  image: docker:26.1
  services:
    - docker:26.1-dind

.template-login-internal-registry: &template-login-internal-registry
  - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin

.template-init-buildx: &template-init-buildx
  - docker buildx create --use

.backend-changes: &backend-changes
  changes:
    - "app/**/*"


build-test-api:
  stage: build-test-images
  before_script:
    - *template-login-internal-registry
    - *template-init-buildx
  script:
    - docker buildx build --push
      --platform linux/amd64
      --cache-to type=registry,ref=$CI_REGISTRY_IMAGE/test:cache
      --cache-from type=registry,ref=$CI_REGISTRY_IMAGE/test:cache
      -t $CI_REGISTRY_IMAGE/test:$CI_COMMIT_SHORT_SHA
      --build-arg version=$CI_COMMIT_SHORT_SHA --target test app
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      <<: *backend-changes

lint-backend:
  stage: lint
  image:
    name: $CI_REGISTRY_IMAGE/test:$CI_COMMIT_SHORT_SHA
  script:
    - cd app
    - python3 lint.py
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      <<: *backend-changes

test-backend:
  stage: test
  image: $CI_REGISTRY_IMAGE/test:$CI_COMMIT_SHORT_SHA
  variables:
    DNS_SERVERS: $TEST_DNS_SERVERS
    SNAIL_ORBIT_DB_URI: $TEST_SNAIL_ORBIT_DB_URI
  script:
    - cd app
    - pytest --cov --cov-report term --cov-report xml:coverage-report.xml --junitxml=pytest-report.xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    reports:
      junit: app/pytest-report.xml
      coverage_report:
        coverage_format: cobertura
        path: app/coverage-report.xml
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      <<: *backend-changes

sec-trivy-src-scan:
  stage: lint
  variables:
    TRIVY_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-db"
    TRIVY_JAVA_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-java-db"
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - trivy fs --exit-code 1 --no-progress --show-suppressed --scanners vuln .
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

sec-gitleaks:
  stage: lint
  image:
    name: zricethezav/gitleaks:latest
    entrypoint: [""]
  script:
    - gitleaks detect
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

build-dev-api:
  stage: build
  before_script:
    - *template-login-internal-registry
    - *template-init-buildx
  script:
    - docker buildx build --push
      --platform linux/amd64
      --cache-to type=registry,ref=$CI_REGISTRY_IMAGE/api:cache-dev
      --cache-from type=registry,ref=$CI_REGISTRY_IMAGE/api:cache-dev
      -t $CI_REGISTRY_IMAGE/api:dev
      --build-arg version=$CI_COMMIT_SHORT_SHA --target api app
    - docker buildx build --push
      --platform linux/amd64
      --cache-from type=registry,ref=$CI_REGISTRY_IMAGE/api:cache-dev
      -t $CI_REGISTRY_IMAGE/tasks:dev
      --build-arg version=$CI_COMMIT_SHORT_SHA --target tasks app
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_TAG == null'

build-dev-ui:
  stage: build
  before_script:
    - *template-login-internal-registry
    - *template-init-buildx
  script:
    - docker buildx build --push
      --platform linux/amd64
      --cache-to type=registry,ref=$CI_REGISTRY_IMAGE/ui:cache-dev
      --cache-from type=registry,ref=$CI_REGISTRY_IMAGE/ui:cache-dev
      -t $CI_REGISTRY_IMAGE/ui:dev
      --build-arg version=$CI_COMMIT_SHORT_SHA frontend
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_TAG == null'
