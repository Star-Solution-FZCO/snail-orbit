stages:
  - build

default:
  image: docker:26.1
  services:
    - docker:26.1-dind

.template-login-internal-registry: &template-login-internal-registry
  - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin

.template-init-buildx: &template-init-buildx
  - docker buildx create --use


build-dev-api:
  stage: build
  before_script:
    - *template-login-internal-registry
    - *template-init-buildx
  script:
    - docker buildx build --push
      --platform linux/amd64
      --cache-to type=registry,ref=$CI_REGISTRY_IMAGE/api:cache-dev
      --cache-from type=registry,ref=$CI_REGISTRY_IMAGE/api:cache-dev
      -t $CI_REGISTRY_IMAGE/api:dev
      --build-arg version=$CI_COMMIT_SHORT_SHA --target api .
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_TAG == null'

build-dev-ui:
  stage: build
  before_script:
    - *template-login-internal-registry
    - *template-init-buildx
  script:
    - docker buildx build --push
      --platform linux/amd64
      --cache-to type=registry,ref=$CI_REGISTRY_IMAGE/ui:cache-dev
      --cache-from type=registry,ref=$CI_REGISTRY_IMAGE/ui:cache-dev
      -t $CI_REGISTRY_IMAGE/ui:dev
      --build-arg version=$CI_COMMIT_SHORT_SHA frontend
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_TAG == null'
