/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const ProjectsIndexLazyImport = createFileRoute('/projects/')()
const IssuesIndexLazyImport = createFileRoute('/issues/')()
const AgilesIndexLazyImport = createFileRoute('/agiles/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProjectsIndexLazyRoute = ProjectsIndexLazyImport.update({
  path: '/projects/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/projects/index.lazy').then((d) => d.Route),
)

const IssuesIndexLazyRoute = IssuesIndexLazyImport.update({
  path: '/issues/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/issues/index.lazy').then((d) => d.Route))

const AgilesIndexLazyRoute = AgilesIndexLazyImport.update({
  path: '/agiles/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/agiles/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/agiles/': {
      id: '/agiles/'
      path: '/agiles'
      fullPath: '/agiles'
      preLoaderRoute: typeof AgilesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/issues/': {
      id: '/issues/'
      path: '/issues'
      fullPath: '/issues'
      preLoaderRoute: typeof IssuesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AgilesIndexLazyRoute,
  IssuesIndexLazyRoute,
  ProjectsIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/agiles/",
        "/issues/",
        "/projects/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/agiles/": {
      "filePath": "agiles/index.lazy.tsx"
    },
    "/issues/": {
      "filePath": "issues/index.lazy.tsx"
    },
    "/projects/": {
      "filePath": "projects/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
