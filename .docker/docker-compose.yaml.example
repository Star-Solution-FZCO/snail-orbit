name: project-manager
services:
  api:
    build:
      context: ../app
      dockerfile: Dockerfile
      target: api
    ports:
    - "127.0.0.1:9090:9090"
    volumes:
    - "./etc:/app/etc"
    - "./data/pm:/data"
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
  tasks-worker:
    build:
      context: ../app
      target: tasks
    command: worker
    volumes:
      - "./etc:/app/etc"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
  tasks-beat:
    build:
      context: ../app
      target: tasks
    command: beat
    volumes:
      - "./etc:/app/etc"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
  mongo:
    image: mongo:7.0
    volumes:
      - "./data/mongo:/data/db"
    environment:
      MONGO_INITDB_ROOT_USERNAME: 'test'
      MONGO_INITDB_ROOT_PASSWORD: 'test'
      MONGO_INITDB_DATABASE: 'pm'
    healthcheck:
      test: mongosh --eval "db.runCommand('ping').ok"
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s
  mongo-express:
    image: mongo-express:latest
    ports:
      - "127.0.0.1:8048:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: test
      ME_CONFIG_BASICAUTH_PASSWORD: test
      ME_CONFIG_MONGODB_URL: mongodb://test:test@mongo:27017
    depends_on:
      mongo:
        condition: service_healthy
  redis:
    image: redis:7-alpine
    volumes:
      - "./data/redis:/data"
    healthcheck:
        test: redis-cli ping
        interval: 5s
        timeout: 3s
        retries: 3
        start_period: 5s
  rabbitmq:
    image: rabbitmq:3.13.7-alpine
    volumes:
      - "./data/rabbitmq:/var/lib/rabbitmq"
    environment:
        RABBITMQ_DEFAULT_USER: test
        RABBITMQ_DEFAULT_PASS: test
    healthcheck:
        test: rabbitmq-diagnostics -q ping
        interval: 5s
        timeout: 3s
        retries: 3
        start_period: 5s
  minio:
    image: minio/minio:RELEASE.2024-10-13T13-34-11Z
    command: server /data --console-address ":9001" --address ":9000"
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    volumes:
      - "./data/minio:/data"
    environment:
      MINIO_ROOT_USER: test
      MINIO_ROOT_PASSWORD: testtest
      MINIO_SERVER_URL: http://127.0.0.1:9000
